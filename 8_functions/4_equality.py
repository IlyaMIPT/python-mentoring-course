# ссылки и проверка на равенство

a = 5
b = 5
print("Проверка на равенство значений", a == b)
print("Проверка на равенство ссылок (идентичность)", a is b)


s1 = "hello, data analyst"


def get_str():
    return "hello, " + "data analyst"


# Т.к. строки идентичны, Python кэширует константы, но на это нельзя надеяться
print("Проверка равенство по значению и по ссылке")
print(s1 == get_str())
print(s1 is get_str())

# Более сложный пример, когда строки равны по значению, но не по ссылке
# т.е. это разные строки в памяти компьютера
# но равенство/неравенство по ссылке не гарантируется, это зависит от реализации интерпретатора


def get_complex_str():
    s = "hello, " + "data analyst"
    return s[:5]


print("Проверка для более сложного случая строк")
print("hello" == get_complex_str())
print("hello" is get_complex_str())

lst1 = [1, 2, 3]
lst2 = [1, 2, 3]

print("Проверка списков:")
print("Списки равны", lst1 == lst2)
print("Списки эквивалентны?", lst1 is lst2)
